{"sections":[],"kind":"article","metadata":{"role":"article","modules":[{"name":"Ari's Notes"}],"title":"211112 Delegation, NumberFormatter, Finding and Refactoring Code, SnapKit","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/AriNote\/documentation\/AriNote","doc:\/\/AriNote\/documentation\/AriNote\/Swift"]]},"primaryContentSections":[{"content":[{"type":"heading","text":"TIL (Today I Learned)","anchor":"TIL-Today-I-Learned","level":1},{"inlineContent":[{"type":"text","text":"11월 12일 (금)"}],"type":"paragraph"},{"type":"heading","text":"학습 내용","anchor":"%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delegation Patten의 복습과 이해"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"NumberFormatter 학습","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":" "}],"type":"paragraph"},{"level":2,"anchor":"%EA%B3%A0%EB%AF%BC%ED%95%9C-%EC%A0%90--%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95","text":"고민한 점 \/ 해결 방법","type":"heading"},{"type":"unorderedList","items":[{"content":[{"anchor":"ViewController%EC%97%90%EC%84%9C%EC%9D%98-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95-%EC%A0%95%EB%A6%AC","level":3,"type":"heading","text":"ViewController에서의 간단한 사용방법 정리"},{"items":[{"content":[{"inlineContent":[{"text":"Main에서 신호를 받아서 처리해야할 일을 protocol에 메서드를 정의해주고, 채택하여 준수한다. (메서드 구현)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Main에서 SubView로 넘어가기전에 자신(Main)을 "},{"code":"delegate = self","type":"codeVoice"},{"type":"text","text":" 라고 알려준 후 다음 화면으로 넘어가게 된다면 다음 화면에서 protocol로 정의해준 메소드를 사용할 수 있게 된다. 이때 delegate는 "},{"code":"protocol 타입","type":"codeVoice"},{"text":"이다.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"text":"코드로 이해해보기","anchor":"%EC%BD%94%EB%93%9C%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%B4%EB%B3%B4%EA%B8%B0","level":3,"type":"heading"},{"type":"codeListing","code":["protocol BossDelegate {","    func wakeUp() \/\/ 일어나는 일을 위임","    \/\/ 비서를 시켜서 자신을 깨우게 할 것임.","}","","protocol SecretaryDelegate {","    var boss: BossDelegate? { get set } \/\/ 보스를 위임","    \/\/ 왜냐하면 보스는 바뀔 수도 있다는 전제하에 확장성을 열어둔 것","}","","class Boss: BossDelegate {","    var secretary: SecretaryDelegate","    var isSleeping: Bool = true","","    init(secretary: SecretaryDelegate) {","        \/\/ 보스를 초기화 시 비서의 보스는 바로 나 자신이라고 알려주기","        self.secretary = secretary","        self.secretary.boss = self","    }","","    func wakeUp() { \/\/ 비서가 해줄 일","        isSleeping = false","        print(\"보스: 아...꿀잠잤다~~~~\")","    }","}","","class Secretary: SecretaryDelegate {","    var boss: BossDelegate? \/\/ 보스를 위임받음","","    func wakeUpBoss() { \/\/ 비서가 하는 일","        print(\"비서: 사장님... 일어나셔야죠...!!!\")","        boss?.wakeUp() \/\/ 보스의 일(wakeUp)을 대신해줌","    }","}","let secretary = Secretary() \/\/ 보스가 없는 상태인데","let ari = Boss(secretary: secretary) \/\/ 여기서 보스가 생김, 동시에 보스는 비서가 생겼음","","secretary.wakeUpBoss()","\/*"," 비서: 사장님... 일어나셔야죠...!!!"," 보스: 아...꿀잠잤다~~~~"," *\/"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"위 예제에서도 확인할 수 있듯이 서로를 위임하고 있는 형태이다. 보통은 단방향으로 위임하여도 의존성이 해결된다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(예: 사장은 비서(secretary)를 알필요가 없다.)"}]}]},{"content":[{"type":"heading","anchor":"NumberFormatter","level":3,"text":"NumberFormatter"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"최대 자릿수 설정하는 방법","type":"text"}]}]}]},{"syntax":"swift","code":["let numberFormatter = NumberFormatter()","numberFormatter.numberStyle = .decimal","numberFormatter.maximumSignificantDigits = 10","let price = 1234567.123456789123422222222","let result = numberFormatter.string(for: price)!","print(result) \/\/ 1,234,567.123"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"잘리는 숫자를 버릴지 반올림할지 설정하는 방법"}]}]}]},{"syntax":"swift","type":"codeListing","code":["let numberFormatter = NumberFormatter()","numberFormatter.numberStyle = .decimal","numberFormatter.maximumSignificantDigits = 10","numberFormatter.roundingMode = .up \/\/ 반올림 모드","let price = 1234567.123546789123422222222","let result = numberFormatter.string(for: price)!","print(result) \/\/ 1,234,567.124"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"몇자리마다 쉼표를 표기해주는 방법"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["let numberFormatter = NumberFormatter()","numberFormatter.numberStyle = .decimal","let price = 1234567898123456789","let result = numberFormatter.string(for: price)!","print(result) \/\/ 1,234,567,898,123,456,789"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"계산기 프로젝트를 위한 실험","type":"text"}]}]}]},{"syntax":"swift","code":["let numberFormatter = NumberFormatter()","numberFormatter.numberStyle = .decimal","numberFormatter.maximumSignificantDigits = 20","numberFormatter.roundingMode = .up \/\/ 반올림","let price = 123.123546789123422222222 \/\/ 정수와 소수점 합쳐서 20개로 잘리는지 #1","let price2 = 1234567.123546789123422222222 \/\/ 정수와 소수점 합쳐서 20개로 잘리는지 #2","let price3 = 1234567.12340000 \/\/ 소수점이 잘리는지","let result = numberFormatter.string(for: price)!","let result2 = numberFormatter.string(for: price2)!","let result3 = numberFormatter.string(for: price3)!","print(result) \/\/ 123.12354678912342","print(result2) \/\/ 1,234,567.1235467892","print(result3) \/\/ 1,234,567.1234"],"type":"codeListing"}]}]},{"inlineContent":[{"type":"text","text":" "}],"type":"paragraph"},{"level":2,"text":"토요스터디 꿀팁","type":"heading","anchor":"%ED%86%A0%EC%9A%94%EC%8A%A4%ED%84%B0%EB%94%94-%EA%BF%80%ED%8C%81"},{"inlineContent":[{"text":"Wody의 라이브코딩을 보며 얻은 꿀팁이다.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"메서드 내부에 일부분을 바로 빼서 다른 메소드로 만드는 방법"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"분리하고 싶은 코드를 드래그 후 우클릭하여 Refactor > Extract to Method를 클릭하면 메서드로 추출할 수 있다.","type":"text"}]}]}]},{"inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/CwPLuyA.png"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"오토레이아웃을 전부 익혀두면 편리한 프레임워크"}],"type":"paragraph"},{"items":[{"content":[{"level":3,"anchor":"SnapKit","type":"heading","text":"SnapKit"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"짧은 코드로 오토레이아웃을 표현할 수 있도록 도와주는 프레임워크다. 아직 지금은 오토레이아웃을 정복하지 못했기 때문에 사용하긴 이른거 같고, 나중에 익숙해졌을 때 필요하게 될 것 같다."}]}]}]}]}],"type":"unorderedList"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":" "}]},{"type":"thematicBreak"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"참고링크"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wody의 프로토콜 강의😎"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter\/roundingmode","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/finding-and-refactoring-code","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/SnapKit\/SnapKit","isActive":true}],"type":"paragraph"}]}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/arinote\/211112_delegation,_numberformatter,_finding_and_refactoring_code,_snapkit"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AriNote\/documentation\/AriNote\/211112_Delegation,_NumberFormatter,_Finding_and_Refactoring_Code,_SnapKit"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"https://i.imgur.com/CwPLuyA.png":{"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/CwPLuyA.png"}],"type":"image","identifier":"https:\/\/i.imgur.com\/CwPLuyA.png","alt":null},"https://developer.apple.com/documentation/foundation/numberformatter/roundingmode":{"titleInlineContent":[{"type":"text","text":"NumberFormatter-roundingmode"}],"url":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter\/roundingmode","type":"link","title":"NumberFormatter-roundingmode","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter\/roundingmode"},"doc://AriNote/documentation/AriNote":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AriNote\/documentation\/AriNote","abstract":[{"type":"codeVoice","code":"Today I Learned"}],"url":"\/documentation\/arinote","title":"Ari's Notes","role":"collection"},"https://developer.apple.com/documentation/xcode/finding-and-refactoring-code":{"titleInlineContent":[{"type":"text","text":"Finding and Refactoring Code"}],"url":"https:\/\/developer.apple.com\/documentation\/xcode\/finding-and-refactoring-code","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/xcode\/finding-and-refactoring-code","title":"Finding and Refactoring Code"},"doc://AriNote/documentation/AriNote/Swift":{"identifier":"doc:\/\/AriNote\/documentation\/AriNote\/Swift","role":"collectionGroup","abstract":[{"type":"text","text":"언어 공부"}],"kind":"article","title":"Swift","url":"\/documentation\/arinote\/swift","type":"topic"},"https://developer.apple.com/documentation/foundation/numberformatter":{"titleInlineContent":[{"type":"text","text":"NumberFormatter"}],"url":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter","type":"link","title":"NumberFormatter","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/numberformatter"},"https://github.com/SnapKit/SnapKit":{"titleInlineContent":[{"type":"text","text":"SnapKit"}],"url":"https:\/\/github.com\/SnapKit\/SnapKit","type":"link","identifier":"https:\/\/github.com\/SnapKit\/SnapKit","title":"SnapKit"}}}