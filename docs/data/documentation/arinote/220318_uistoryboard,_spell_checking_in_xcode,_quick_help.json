{"metadata":{"role":"article","modules":[{"name":"Ari's Notes"}],"roleHeading":"Article","title":"220318 UIStoryboard, Spell checking in Xcode, Quick help"},"identifier":{"url":"doc:\/\/AriNote\/documentation\/AriNote\/220318_UIStoryboard,_Spell_checking_in_Xcode,_Quick_help","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"TIL-Today-I-Learned","text":"TIL (Today I Learned)","type":"heading","level":1},{"type":"paragraph","inlineContent":[{"text":"3월 18일 (금)","type":"text"}]},{"level":2,"text":"학습 내용","type":"heading","anchor":"%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"코드리뷰 코멘트 보면서 학습","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"오탈자 손쉽게 찾는 방법","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"퀵헬프와 문서화 주석?","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"UIStoryboard extension","type":"text"}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"text","text":" "}],"type":"paragraph"},{"anchor":"%EA%B3%A0%EB%AF%BC%ED%95%9C-%EC%A0%90--%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95","level":2,"type":"heading","text":"고민한 점 \/ 해결 방법"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[스토리보드로 설정한 ViewController 인스턴스를 간결하게 가져오기]"}]}],"type":"paragraph"},{"syntax":"swift","code":["func storyboardStart() {","    let storyboard = UIStoryboard(name: Constant.storyboardName, bundle: nil)","    guard let main = storyboard.instantiateViewController(","        withIdentifier: Constant.storyboardID","    ) as? MainViewController else {","        return","    }","    main.viewModel = ProjectListViewModel(coordinator: self)","    navigationController.pushViewController(main, animated: false)","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"스토리보드를 가져오고, 그 스토리보드 내부에 있는 ViewController를 인스턴스화 해주려면 위와 같이 guard문으로 캐스팅을 해줘야한다."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"이 작업을 매번 이렇게 해줄게 아니라, 좀 더 간단하게 해줄 수는 없을까? 하고 방법을 찾아보았다."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/\/ case에 해당하는 스토리보드를 반환하는 열거형 타입","enum Storyboard: String {","    case main = \"Main\"","    case detail = \"Detail\"","    ","    func storyboard() -> UIStoryboard {","        return UIStoryboard(name: rawValue, bundle: nil)","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"먼저 위와 같이 스토리보드라는 열거형 타입을 만들어서 각 케이스 별로 스토리보드 name을 rawValue로 가지고 있게 설계한 후, storyboard 메소드를 호출했을 때, 자신이 가지고있는 rawValue를 활용하여 UIStoryboard를 호출하도록 만들어주었다.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/\/ Storyboard 타입의 프로퍼티와 associatedtype 타입의 ViewModel을  정의하고 있는 프로토콜","protocol StoryboardCreatable {","    associatedtype ViewModel","    static var storyboard: Storyboard { get }","    var viewModel: ViewModel { get set }","}","","extension StoryboardCreatable {","    static var storyboardIdentifier: String {","        return String(describing: Self.self)","    }","    \/\/\/ ViewController 내부에 ViewModel을 할당해주는 메소드","    mutating func configureWithViewModel(viewModel: ViewModel) {","        self.viewModel = viewModel","    }","}"]},{"inlineContent":[{"text":"그리고 ViewController에 채택해줄 StoryboardCreatable 프로토콜을 구현했다.","type":"text"},{"type":"text","text":" "},{"text":"extension으로 Identifier를 반환하는 프로퍼티와 ViewModel을 할당해주는 메소드를 구현해주었다.","type":"text"}],"type":"paragraph"},{"code":["extension StoryboardCreatable where Self: UIViewController {","    \/\/\/ 스토리보드에서 ViewController를 가져와서 ViewModel을 주입해주는 메소드","    \/\/\/ - Parameter viewModel: ViewController에 주입할 ViewModel","    \/\/\/ - Returns: ViewModel이 할당된 ViewController를 반환한다.","    static func createFromStoryboard(viewModel: ViewModel) -> Self {","        var viewController: Self = UIStoryboard.createViewController()","        viewController.configureWithViewModel(viewModel: viewModel)","        return viewController","    }","}","","extension UIStoryboard {","    \/\/\/ 스토리보드에서 ViewController를 인스턴스화 시켜주는 메소드","    \/\/\/ - Returns: ViewController를 반환한다.","    static func createViewController<T: StoryboardCreatable>() -> T {","        let storyboard = UIStoryboard(name: T.storyboard.rawValue, bundle: nil)","        let createViewController = storyboard.instantiateViewController(withIdentifier: T.storyboardIdentifier)","        guard let viewController =  createViewController as? T else {","            fatalError(\"Expected view controller with identifier \\(T.storyboardIdentifier)\")","        }","        return viewController","    }","}",""],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"그리고 본격적으로 스토리보드를 통해 ViewController를 인스턴스화 해준 뒤 앞서 만든 configureWithViewModel 메소드를 활용하여 ViewModel을 할당해준 뒤 ViewController를 반환해주는 메소드를 구현해주었다."}],"type":"paragraph"},{"syntax":"swift","code":["class MainViewController: UIViewController, StoryboardCreatable {","    static var storyboard: Storyboard = .main"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"그리고 ViewController에서는 StoryboardCreatable를 채택해주고 storyboard 프로퍼티만 구현해주면 된다."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"코디네이터 내부 메소드는 아래와 같이 단 3줄로 간결해졌다.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ 리팩토링 전","func storyboardStart() {","    let storyboard = UIStoryboard(name: Constant.storyboardName, bundle: nil)","    guard let main = storyboard.instantiateViewController(","        withIdentifier: Constant.storyboardID","    ) as? MainViewController else {","        return","    }","    main.viewModel = ProjectListViewModel(coordinator: self)","    navigationController.pushViewController(main, animated: false)","}","","\/\/ 리팩토링 후","func storyboardStart() {","    let viewModel = ProjectListViewModel(coordinator: self) \/\/ 뷰모델 생성","    let mainViewController = MainViewController.createFromStoryboard(viewModel: viewModel) \/\/ 뷰모델을 전달하여 ViewController 인스턴스화","","    navigationController.pushViewController(mainViewController, animated: false)","}"]},{"type":"thematicBreak"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[Xcode에서 오탈자를 손쉽게 찾는 방법]"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"오탈자를 찾고싶은 파일에 접근하고 아래와 같은 경로로 들어가준다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Check를 하게되면 Xcode에서 빨간줄로 오탈자를 체크해준다.","type":"text"},{"text":" ","type":"text"},{"type":"image","identifier":"https:\/\/i.imgur.com\/I4GmuFW.png"}]}]}],"type":"unorderedList"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"체크 예시","type":"text"}],"type":"paragraph"}]},{"inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/23mGmUZ.png"}],"type":"paragraph"},{"anchor":"%EB%8B%A8%EC%B6%95%ED%82%A4","type":"heading","text":"단축키","level":3},{"inlineContent":[{"code":"Command","type":"codeVoice"},{"text":" + ","type":"text"},{"type":"codeVoice","code":";"}],"type":"paragraph"},{"type":"thematicBreak"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[문서화 주석과 퀵헬프]"}]}],"type":"paragraph"},{"anchor":"%ED%80%B5%ED%97%AC%ED%94%84%EB%9E%80","type":"heading","level":3,"text":"퀵헬프란?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode에서 래퍼런스 문서의 요약된 내용을 보여주는 기능"}]},{"text":"문서화 주석","type":"heading","anchor":"%EB%AC%B8%EC%84%9C%ED%99%94-%EC%A3%BC%EC%84%9D","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"변수, 상수, 클래스, 메소드, 함수, 열거형 등을 설명할 경우 마크업 문법에 따라 주석을 작성하면 다른 프로그래머가 ‘퀵헬프’를 통해 해당 내용을 확인할 수 있다."},{"text":" ","type":"text"},{"text":"형식을 맞추는 일은 번거롭지만 문서화에 큰 도움이 되므로 사용할 것을 권장한다.","type":"text"}]},{"level":3,"type":"heading","anchor":"%EB%AC%B8%EC%84%9C%ED%99%94-%EC%A3%BC%EC%84%9D-%EC%83%9D%EC%84%B1-%EB%8B%A8%EC%B6%95%ED%82%A4","text":"문서화 주석 생성 단축키"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"Command","type":"codeVoice"},{"text":" + ","type":"text"},{"type":"codeVoice","code":"Option"},{"type":"text","text":" + "},{"type":"codeVoice","code":"\/"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"문서화 주석에서 한줄 주석은 슬래시 세개, 여러줄 주석은 별표 두개를 사용한다."}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["\/\/ MARK: - 문서화 주석","\/\/\/ 한 줄 문서화 주석","\/**"," 여러 줄 문서화 주석"," *\/"],"type":"codeListing"},{"type":"heading","level":3,"anchor":"%EC%BD%94%EB%93%9C%EC%98%88%EC%A0%9C","text":"코드예제"},{"code":["    \/**","     자기 자신을 제외한 나머지 case들의 description을 문자열 배열 형태로 반환합니다.","     ","     예시로 todo 케이스의 경우 doing과 done의 description이 담긴 문자열 배열이 반환됩니다.","     ````","     let array = ProjectState.todo.excluded \/\/ [\"DOING\", \"DONE\"]","     ````","     *\/","    var excluded: [String] {","        switch self {","        case .todo:","            return [ProjectState.doing.description, ProjectState.done.description]","        case .doing:","            return [ProjectState.todo.description, ProjectState.done.description]","        case .done:","            return [ProjectState.todo.description, ProjectState.doing.description]","        }","    }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/xUKjujA.png"}]},{"anchor":"%EB%A7%88%ED%81%AC%EC%97%85-%EB%AC%B8%EB%B2%95","text":"마크업 문법","type":"heading","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"‘-’, ‘+’, ‘*’ : 원형 글머리 기호 즉, 순서가 없는 리스트를 사용할 수 있다.","type":"text"},{"type":"text","text":" "},{"text":"• 1. 2. 3. … : 번호를 붙여서 순서 있는 리스트를 만들 수 있다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"   ※ 번호는 크게 중요하지 않다. 자동으로 번호를 매겨 준다."},{"type":"text","text":" "},{"text":"• 줄바꿈 : 텍스트 간에 한 줄을 비워놓으면 된다.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"• 문단 바꿈 : 바를 세 개 이상 사용하면 긴 줄로 문단을 나눠준다. "},{"text":" ","type":"text"},{"type":"text","text":"• 텍스트 기울임 : "},{"code":"*[텍스트]*","type":"codeVoice"},{"type":"text","text":" "},{"text":"• 텍스트 굵게 : ","type":"text"},{"code":"**[텍스트]**","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"• 링크 : "},{"code":"[링크 내용](링크 주소)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"• 큰 제목 : 큰 제목으로 사용할 텍스트 밑에 ‘==’ 등호 두 개 쓰기 or # [제목 작성]","type":"text"},{"type":"text","text":" "},{"type":"text","text":"• 중간 제목 : 중간 제목으로 사용할 텍스트 밑에 ‘-’ 바 쓰기 or ## [중간 제목 작성] "},{"type":"text","text":" "},{"type":"text","text":"• 코드 블록 : 네 칸 이상 들여쓰기 or 강세표(backquote, `)를 세 개 이상 한 쌍으로 묶기"}]}]}],"type":"unorderedList"},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"[스토리보드를 쓰지말아야하는 이유]","type":"text"}],"type":"strong"}]},{"text":"스토리보드의 장점","level":3,"anchor":"%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B3%B4%EB%93%9C%EC%9D%98-%EC%9E%A5%EC%A0%90","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"빠른 초기화","type":"codeVoice"}]},{"items":[{"content":[{"inlineContent":[{"text":"뷰를 만드는데 오래 걸리지 않는다.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"시각화"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"앱의 흐름을 한눈에 볼 수 있다.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"code":"낮은 진입장벽","type":"codeVoice"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"코드를 몰라도 초보자들이 이쁜 뷰를 만들 수 있다."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"anchor":"%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B3%B4%EB%93%9C%EC%9D%98-%ED%95%9C%EA%B3%84%EC%99%80-%EB%8B%A8%EC%A0%90","type":"heading","level":3,"text":"스토리보드의 한계와 단점"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"생산성","type":"codeVoice"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"앱이 점점 커지고 스토리보드 로딩시간이 길어지게 되면 오히려 생산성이 떨어지게 된다.","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"code":"가독성","type":"codeVoice"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"스토리보드가 방대하면 읽기도 어려워지고 난잡해보인다.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"code":"협업 어려움","type":"codeVoice"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스토리보드 파일이 XML 포맷에다가 읽기도 어렵기 때문에 다수의 인원이 수정을 하게되면 Merge Conflict 처리가 큰 어려움으로 작용된다."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"재사용성"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스토리보드로 만든 뷰는 재사용하기가 어렵다"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"번거로움"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"스토리보드로 만든 뷰들을 코드와 연결하기 위해서는 Identifier를 부여해줘야하는데 일일히 연결해주는게 생각보다 번거롭다.","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"코드로 UI를 짜야하는 이유","level":3,"anchor":"%EC%BD%94%EB%93%9C%EB%A1%9C-UI%EB%A5%BC-%EC%A7%9C%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"간혹 스토리보드로는 구현 못하는 것들이 있다.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"버튼에 Border Radius를 준다던가, 배경에 특정 패턴을 준다던가…"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"코드로 UI를 작성하다보면 API Reference Documentation을 자주 찾아보게 되고 자연스럽게 공식문서와 친해진다."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"네비게이션 바, 탭바 컨트롤러 동작 원리 등을 자연스럽게 찾아보게 된다."}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"스토리보드에만 의존하다보면 언젠가는 한계에 직면하게 되고 극복하려면 코드를 써야한다."}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B3%B4%EB%93%9C%EB%8A%94-%EC%96%B8%EC%A0%9C%EC%8D%A8%EC%95%BC-%EC%A0%81%EC%A0%88%ED%95%A0%EA%B9%8C","type":"heading","text":"그렇다면 스토리보드는 언제써야 적절할까?","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"앱이 규모가 크지 않고 복잡하지 않아서 빠르게 만들 수 있을 때","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"스토리보드만으로 만들 수 있고 흐름을 한눈에 보고싶을 때","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"누군가와 협업하지 않고 혼자서 앱을 만들 때"}]}]}]},{"type":"thematicBreak"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"참고링크","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"https:\/\/charmintern.tistory.com\/40"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"https:\/\/charmintern.tistory.com\/41","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/zeunny.tistory.com\/9"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"야곰의 스위프트 프로그래밍 3판 70p"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"https:\/\/sarunw.com\/posts\/spell-checking-in-xcode\/","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"https:\/\/gist.github.com\/markcleonard\/f1a19b27c00f8e1c82872705c1a06863","type":"text"}]}]}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/arinote\/220318_uistoryboard,_spell_checking_in_xcode,_quick_help"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/AriNote\/documentation\/AriNote","doc:\/\/AriNote\/documentation\/AriNote\/UIKit"]]},"kind":"article","references":{"https://i.imgur.com/23mGmUZ.png":{"type":"image","identifier":"https:\/\/i.imgur.com\/23mGmUZ.png","alt":null,"variants":[{"url":"https:\/\/i.imgur.com\/23mGmUZ.png","traits":["1x","light"]}]},"https://i.imgur.com/I4GmuFW.png":{"type":"image","identifier":"https:\/\/i.imgur.com\/I4GmuFW.png","alt":null,"variants":[{"url":"https:\/\/i.imgur.com\/I4GmuFW.png","traits":["1x","light"]}]},"https://i.imgur.com/xUKjujA.png":{"type":"image","identifier":"https:\/\/i.imgur.com\/xUKjujA.png","alt":null,"variants":[{"url":"https:\/\/i.imgur.com\/xUKjujA.png","traits":["1x","light"]}]},"doc://AriNote/documentation/AriNote":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AriNote\/documentation\/AriNote","abstract":[{"type":"codeVoice","code":"Today I Learned"}],"url":"\/documentation\/arinote","title":"Ari's Notes","role":"collection"},"doc://AriNote/documentation/AriNote/UIKit":{"kind":"article","title":"UIKit","abstract":[{"type":"text","text":"한몸이 되보자…"}],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/AriNote\/documentation\/AriNote\/UIKit","url":"\/documentation\/arinote\/uikit"}}}