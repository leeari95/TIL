{"metadata":{"modules":[{"name":"Ari's Notes"}],"role":"article","title":"211216 sync, async, Parallel, Concurrency, GCD","roleHeading":"Article"},"primaryContentSections":[{"content":[{"text":"TIL (Today I Learned)","level":1,"anchor":"TIL-Today-I-Learned","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"12월 16일 (목)"}]},{"type":"heading","anchor":"%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9","text":"학습 내용","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"동시성 프로그래밍 활동학습"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"GCD란?"},{"text":" ","type":"text"},{"type":"text","text":" "}]}]}],"type":"unorderedList"},{"text":"고민한 점 \/ 해결 방법","type":"heading","anchor":"%EA%B3%A0%EB%AF%BC%ED%95%9C-%EC%A0%90--%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95","level":2},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"[동시성 프로그래밍 활동학습]","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"동시성(Concurrency) 프로그래밍, 병렬(Parallelism) 프로그래밍은 어떻게 다르며, 우리가 주로 접할 iOS 환경에서는 무엇을 더 고려해봐야 할까?"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"동시성(Concurreny)"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"논리적인 용어","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"동시에 실행되는 것처럼 보임","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"싱글 코어에서 멀티스레드를 동작시키기 위한 방식"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"멀티 코어에서도 동시성은 사용가능"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"멀티태스킹을 위해 여러 스레드가 번갈아가면서 실행되는 성질","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"동시성을 이용한 싱글 코어의 멀티 태스킹은 각 스레드들이 병렬적으로 실행되는 것처럼 보이지만 사실은 번갈아가면서 조금씩 실행되고 있는 것"}]}]}]}]},{"content":[{"inlineContent":[{"text":"병렬성(Parallelism)","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"물리적인 용어"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"실제로 작업이 동시에 처리되는 것"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"멀티코어에서 멀티스레드를 동작시키는 방식"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"한 개 이상의 스레드를 포함하는 각 코어들이 동시에 실행되는 성질"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"병렬성은 데이터 병렬성(Data Parallelism)과 작업 병렬성(Task Parallelism)으로 구분"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"데이터 병렬성 : 전체 데이터를 나누어 서브 데이터들로 만든 뒤, 서브 데이터들을 병렬 처리해서 작업을 빠르게 수행하는 방법이다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"작업 병렬성 : 서로 다른 작업을 병렬 처리하는 것을 말한다."}]}]}]}]}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"동시성 프로그래밍, 병렬 프로그래밍, 동기(asynchronous)와 비동기(asynchronous)의 개념은 어떤 상관관계를 가질까?","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"비동기 프로그래밍","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프로그램의 주 실행 흐름을 멈추어서 기다리지 않고 다음 작업을 실행할 수 있게 하는 방식이다. 코드의 실행 및 결과 처리를 별도의 공간에 맡겨둔 뒤 그 실행결과를 기다리지 않고 다음 코드를 실행하는 병렬처리 방식이다. 비동기 프로그래밍은 언어 및 프레임워크에서 지원하는 여러 방법으로 구현할 수 있다."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"동시성 프로그래밍","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"논리적인 용어로 동시에 실행되는 것처럼 보이는 방식이다. 싱글 코어에서 멀티스레드를 동작시키기 위한 방식으로 멀티 태스킹을 위해 여러 개의 스레드가 번갈아 가면서 실행되는 방식이다.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Async vs Sync"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Async는 비동기다. 비동기란 내가 작업을 맡기고 실행되는 동안에 나는 또 다른 일을 할 수 있는 것을 뜻한다. 예를 들어 커피를 주문하고 기다리는 동안 아무것도 못하는게 아니라 다른일을 할 수 있는 그런 느낌이다. 반대로 Sync는 해당 작업이 끝날 때까지 기다려야 한다."}]}]}],"type":"unorderedList"}]}]}]},{"content":[{"inlineContent":[{"text":"애플이 동시성 프로그래밍 또는 병렬 프로그래밍을 지원하기 위해 사용하는 기술엔 무엇무엇이 있을까?","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Grand Central Dispatch(GCD)"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"멀티 코어와 멀티 프로세싱 환경에서 최적화 된 프로그래밍을 할 수 있도록 애플이 개발한 기술이다."}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operation Queue"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"비동기적으로 실행되어야하는 작업을 객체 지향적인 방법으로 사용한다"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Thread","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"스레드는 하나의 프로세스 내에서 실행되는 작업흐름의 단위를 말한다. 보통 한 프로세스는 하나의 스레드를 가지고 있지만 환경에 따라 둘 이상의 스레드를 동시에 실행할 수도 있다. 이러한 방식을 멀티스레딩이라고 한다. 프로그램 실행이 시작될 때부터 동작하는 스레드를 메인 스레드라고 하고 나중에 생성된 스레드를 서브 스레드 또는 세컨더리 스레드라고 한다.","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프로그래밍에서 Thread는 무엇이고 iOS 환경에서 이를 다루기 위한 방법에는 무엇무엇이 있으며 그 차이는 무엇일까?"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Thread"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"스레드는 하나의 프로세스 내에서 실행되는 작업흐름의 단위를 말한다. 보통 한 프로세스는 하나의 스레드를 가지고 있지만 환경에 따라 둘 이상의 스레드를 동시에 실행할 수도 있다. 이러한 방식을 멀티스레딩이라고 한다. 프로그램 실행이 시작될 때부터 동작하는 스레드를 메인 스레드라고 하고 나중에 생성된 스레드를 서브 스레드 또는 세컨더리 스레드라고 한다.","type":"text"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"iOS 환경에서의 동시성 프로그래밍 지원 종류","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"GCD (Grand Central Dispatch) : 멀티 코어와 멀티 프로세싱 환경에서 최적화된 프로그래밍을 할 수 있도록 애플이 개발한 기술이다.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Operation Queue : 비동기적으로 실행되어야 하는 작업을 객체 지향적인 방법으로 사용한다","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Thread : 멀티스레드 프로그래밍을 위한 애플에서 제공하는 스레드 클래스","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[동기 프로그래밍]"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"하드웨어 시스템들은 다 동기에 맞춰 동작한다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"서버에 있는 소스를 가져올 때 다 받아올 때 까지 멈춰있는다."}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[비동기 프로그래밍]"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"작업을 분리해서 사용해야한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"서버가 있을 것이고 앱은 데이터를 요청해서 화면에 표시하는 형태로 앱이 만들어질 것이다."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"[Parallel(병렬) vs Concurrency(동시)]"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"병렬"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"물리적"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"물리적 스레드에서 실제 동시에 일을 하는 개념"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"동시"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"논리적"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"메인 스레드가 아닌 다른 소프트웨어적인 스레드에서 동시에 일을 하는 개념","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Concurrent Programming","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"장점"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UI 화면은 언제나 반응성을 유지해야 한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"병렬 실행은 더 빠르다"}]}]}]}]},{"content":[{"inlineContent":[{"text":"비용","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"제대로 멀티스레드 코드를 작성하기에 무지막지하게 어렵다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"확장 가능하게 여러 작업을 동시에 처리하는 일반적인 문제들"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼에도 배워야한다 왜?"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"병렬성과 동시성이 좋아지는 시대가 왔다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"코어를 늘리는게 대세다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"이제는 스레드를 만드는게 중요한게 아니다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"스레드를 생성하고 재사용하는건 운영체제가 해줄태니까 개발자들은 그 스레드에 해당하는 큐에다가 클로저를 넣어주기만 해 > 큐 단위로 클로저에서 큐에서 꺼내서 클로저들을 스레드에다가 붙여서 그 스레드에 대해서 실행하고 또 처리해줄게."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"더 작은 클로저 단위로 큐에다가 코드를 넣어주면 클로저 단위로 꺼내서 어떤 스레드에서 동작하게 만들지를 이제 클로저 단위로 작업 스케줄에서 만들자 라는게 컨셉이다."}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"[Grand Central Dispatch]","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"커널 위에 바로 만들어져 있다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"맥에나 iOS에서는 lib 시스템이라는 프레임워크 안에 들어있다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"스레드를 잘 다루는 것이 어렵더라. 잘쓰는 방법을 만들어보자 해서 시작하게 되었다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드블럭 단위를 클로저로 묶어서 그거를 큐에다 넣고 큐가 그거를 실행하는 이런 구조로 만들자는 의도"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"특장점","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"반응성을 개선"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"다이나믹 확장"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"보다 나은 프로세스 사용"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"깔끔한 코드"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"스레드를 많이 만드는게 좋은 일이 아니다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"적정한 갯수만큼만 cpu 구조에 맞게 운영하는게 좋을탠데, 개발자들이 직접 관리하는 것 보다는 운영체제가 cpu 아키텍처에 맞게 운영하는게 더 좋다 그걸 GCD가 해주겠다. 라는거다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"큐를 사용한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"순차적으로 실행되는 구조는 동일하다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이벤트 소싱이 가능해진다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"어떤 이벤트가 발생하면 같은 방식으로해서 인터럽트가 발생했을 때 그 처리도 같은 식의 q에서 처리되는 것처럼 사용할 수 있게 된다."}]}]}]}]},{"content":[{"inlineContent":[{"text":"디스패치 소스에 해당하는 것도 있다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"GCD가 관리하는 Pool이 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"더 좋은 구조에서는 Pool이 더 많을 수도 있다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"GCD를 사용하므로써 얻는 이점","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"효율성","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드가 CPU 사이클을 더 효과적으로"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"더 나은 표현","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"선언하기 편한 클로저","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"프로듀서\/컨슈머 관계를 표현하는 큐(Queues)","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"시스템 수준 관리","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"서브 시스템에 독립적으로 OS가 관리"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"기존 스레드 처리나 동기화 방식과 100% 호환 가능"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"GCD 스레드는 POSIX 스레드를 포장"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"GCD 스레드를 cancel, exit, kill, join, or detach 하지마라","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"GCD 스레드를 재사용","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"클로저 내부에서 스레드별 상태 변화를 복구하라"}]}]}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스레드 자체는 GCD가 관리하기 때문에 신경 쓸 필요가 없다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스레드 클래스 예제"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/i.imgur.com\/sOiOzwg.png","type":"image"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"GCD를 사용하면 단 2줄로 줄일 수 있다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/DkYpdKM.png"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"GCD Advantages","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Thread recycling"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"스레드를 재사용하기 때문에 효율성이 좋아진다.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Deferred based on availability","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"보호하기 Locking"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Enforce mutually exclusive access to critical sections","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Serialize access to shared state between thrads"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure data integrity"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/i.imgur.com\/K9ssUAY.png","type":"image"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"위 처럼 lock을 넣어줘야 멀티쓰레드 환경에서 안전한 스레드 세이프 함수가 된다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"lock이 없으면 순차적으로 접근하는게 보장이 안되기 때문에 어느 순간 동시에 쓸려그러다가 앱이 멈출수도 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"동시에 쓰려고 했는데 하나를 쓰기전에 다른게 먼저 써줘가지고 값이 깨질 수도 있다.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"원하는 표현이 안될 수도 있다."}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"GCD를 활용한다면 아래처럼 사용해주면 된다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/i.imgur.com\/fwVrfjp.png","type":"image"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"위 코드 블럭만큼은 한 덩어리로 처리가 된다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"한 덩어리로 큐에 들어가기 때문에 충돌 날 일이 없다."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"위 빨간 박스 아래 코드를 다 실행할 때 까지 동기화가 되서 멈춰져 있다. 실행이 끝나고 나면 아래로 내려간다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/8dTfvwf.png"}]}]},{"content":[{"inlineContent":[{"text":"async가 되면 큐에다가 넣는 작업을 하고 그냥 빠져나간다.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"sync로 하던 async로 하던 클로저 안은 충돌나지 않고 각각의 큐에 있는 클로저가 순서대로 실행되기 때문에 순서가 보장된다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"따라서 Lock을 쓰지 않더라도 GCD에서는 Lock을 쓰는 효과가 있다는 것이다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/i.imgur.com\/ZKhkin4.png","type":"image"}]}]},{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/yMGvuwB.png"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"특정한 시간 뒤에 이 코드 블럭을 실행시켜주는 것을 보장해준다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프레임 드랍이 발생할 정도로 메인쓰레드가 바쁘면 이것도 딜레이가 되어 호출이 늦어질 수도 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"화면처리를 하는게 아니라면 꼭 메인스레드에 넣을 필요없다. 다른 쓰레드에 넣어도 된다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/i.imgur.com\/T98CHyL.png"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"‘나는 백그라운드 어딘가에서 요 코드가 되기만 하면 돼’ 그러면 글로벌 큐에 넣어줄 수도 있다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"큐의 종류"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"동시성 큐"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Concurrent Queue Execute multiple blocks at the same time"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Concurrently executed closures may complete out of order","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Queues execute concurrently with respect to other queues"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"시리얼 큐","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Lightweight list of closures"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Enqueue and dequeue are FiFO"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Serial queue execute blocks one at a time","type":"text"}]}]}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"큐는 기본적으로 직렬성이다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"직렬성으로 만들건지 동시성으로 만들건지 선택할 수 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"아무 옵션을 주지않으면 직렬큐로 만들어지고 글로벌 큐로 만들면 동시성으로 만들어진다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"동시성에 있는 큐는 큐가 여러개다.","type":"text"}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/i.imgur.com\/6YNThOn.png","type":"image"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"DispatchGroup"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"여러작업들을 할 때 그 작업들이 한꺼번에 그룹핑해서 끝나야지만 다 끝났다라고 판단할 때 사용"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"DispatchQoS","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"우선순위를 정한다. 큐 중에서도 어떤 작업들이 먼저 들어가야될지 말아야 될지를 관리해준다."}]}]}]}]},{"content":[{"inlineContent":[{"text":"DispatchWorkItemFlags","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"옵션들을 조정할 수 있다.","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"concurrentPerform?"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"타입메서드"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"for문 처럼 같은 작업을 여러번 반복해야하는 것들, 클로저를 N번 실행해야할 때 사용한다."}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Suspending and resuming execution"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"func suspend()","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"func resume()"}]}]}]}]},{"content":[{"inlineContent":[{"text":"큐를 사용할 때 유의할 점","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"일반적인 목적의 데이터 구조가 아니다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"GCD에서 사용하기 위한 흐름 제어를 위한 것이다","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"큐에 블록을 한번 추가하면 반드시 실행된다는 것을 보장해준다."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"동기화 sync API를 사용할 때는 조심해야 한다.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Dead lock 상태로 멈춰버릴 수 있다.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"취소하려면 DispatchWorkItem 또는 OperationQueue","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/i.imgur.com\/9FE0knz.png","type":"image"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"GCD Design Patterns"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"쉬운방법"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Dispatch_async()를 써라"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"큐는 프로듀서\/컨슈머 구조로"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"클로저가 작업 사이에 데이터를 옮겨준다.","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"큐는 가볍고 효율적으로"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"스레드가 자동적으로 생성되거나 재사용된다.","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UI 이벤트 주도 개발과 비슷함"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"다른 이벤트를 기다리기 위해서 스레드를 멈추거나 폴링하지 마라","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"예) 소켓대기, 디렉토리 변화 감시","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"디스패치 소스 고려","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"운영체제 이벤트를 감시하거나 요청에 대한 응답을 기다릴 때"}],"type":"paragraph"}]}]}]}]}]}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/AriNote\/documentation\/AriNote","doc:\/\/AriNote\/documentation\/AriNote\/CS"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AriNote\/documentation\/AriNote\/211216_sync,_async,_Parallel,_Concurrency,_GCD"},"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/arinote\/211216_sync,_async,_parallel,_concurrency,_gcd"]}],"references":{"doc://AriNote/documentation/AriNote":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AriNote\/documentation\/AriNote","abstract":[{"type":"codeVoice","code":"Today I Learned"}],"url":"\/documentation\/arinote","title":"Ari's Notes","role":"collection"},"https://i.imgur.com/8dTfvwf.png":{"identifier":"https:\/\/i.imgur.com\/8dTfvwf.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/8dTfvwf.png"}],"type":"image"},"https://i.imgur.com/ZKhkin4.png":{"identifier":"https:\/\/i.imgur.com\/ZKhkin4.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/ZKhkin4.png"}],"type":"image"},"doc://AriNote/documentation/AriNote/CS":{"type":"topic","role":"collectionGroup","url":"\/documentation\/arinote\/cs","kind":"article","title":"CS","identifier":"doc:\/\/AriNote\/documentation\/AriNote\/CS","abstract":[{"type":"text","text":"Computer Science"}]},"https://i.imgur.com/DkYpdKM.png":{"identifier":"https:\/\/i.imgur.com\/DkYpdKM.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/DkYpdKM.png"}],"type":"image"},"https://i.imgur.com/fwVrfjp.png":{"identifier":"https:\/\/i.imgur.com\/fwVrfjp.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/fwVrfjp.png"}],"type":"image"},"https://i.imgur.com/yMGvuwB.png":{"identifier":"https:\/\/i.imgur.com\/yMGvuwB.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/yMGvuwB.png"}],"type":"image"},"https://i.imgur.com/sOiOzwg.png":{"identifier":"https:\/\/i.imgur.com\/sOiOzwg.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/sOiOzwg.png"}],"type":"image"},"https://i.imgur.com/9FE0knz.png":{"identifier":"https:\/\/i.imgur.com\/9FE0knz.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/9FE0knz.png"}],"type":"image"},"https://i.imgur.com/K9ssUAY.png":{"identifier":"https:\/\/i.imgur.com\/K9ssUAY.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/K9ssUAY.png"}],"type":"image"},"https://i.imgur.com/T98CHyL.png":{"identifier":"https:\/\/i.imgur.com\/T98CHyL.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/T98CHyL.png"}],"type":"image"},"https://i.imgur.com/6YNThOn.png":{"identifier":"https:\/\/i.imgur.com\/6YNThOn.png","alt":null,"variants":[{"traits":["1x","light"],"url":"https:\/\/i.imgur.com\/6YNThOn.png"}],"type":"image"}}}