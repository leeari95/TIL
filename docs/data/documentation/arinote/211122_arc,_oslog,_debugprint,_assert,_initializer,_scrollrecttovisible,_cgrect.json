{"metadata":{"title":"211122 ARC, OSLog, debugPrint, assert, initializer, scrollRectToVisible, CGRect","roleHeading":"Article","role":"article","modules":[{"name":"Ari's Notes"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"content":[{"level":1,"type":"heading","text":"TIL (Today I Learned)","anchor":"TIL-Today-I-Learned"},{"inlineContent":[{"text":"11월 22일 (월)","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9","level":2,"text":"학습 내용"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"ARC 활동학습"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"메모리 영역을 4가지로 나누는 이유"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"weak는 언제 써야할지 알겠는데, unowned는 언제써야해?"}]}]}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"계산기 프로젝트 STEP 3 피드백 고민"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"개발자에게 보여주기 위한 print문..?","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"OSLog"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"debugPrint","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"assert"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"override init과 required init의 차이점은?"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"계산기 모둠 프로젝트를 하면서 알게된 사실","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"scrollRectToVisible()을 이용해서 자동스크롤을 구현할 수 있었다.","type":"text"},{"type":"text","text":" "},{"type":"text","text":" "}]}]}]}]}]},{"level":2,"type":"heading","anchor":"%EA%B3%A0%EB%AF%BC%ED%95%9C-%EC%A0%90--%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95","text":"고민한 점 \/ 해결 방법"},{"text":"메모리 영역을 4가지로 나누는 이유","type":"heading","level":3,"anchor":"%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%98%81%EC%97%AD%EC%9D%84-4%EA%B0%80%EC%A7%80%EB%A1%9C-%EB%82%98%EB%88%84%EB%8A%94-%EC%9D%B4%EC%9C%A0"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"우리가 어떠한 프로그램을 구현할 때 각각의 변수, 함수, 클래스 등이 ","type":"text"},{"code":"호출되고 해제되는 시기가 다르기 때문","type":"codeVoice"},{"text":"이다. 만약 어떠한 함수 내에서 한번 사용되는 변수가 프로그램의 처음부터 끝까지 메모리에 남아있다면 메모리가 낭비되는 일이 될 것이다.","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"text":"ARC가 하는 것과 못하는 것?","anchor":"ARC%EA%B0%80-%ED%95%98%EB%8A%94-%EA%B2%83%EA%B3%BC-%EB%AA%BB%ED%95%98%EB%8A%94-%EA%B2%83","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"힙에 메모리를 자동으로 해제해주어 메모리관리를 대신 처리해주지만 "},{"type":"codeVoice","code":"참조사이클까지는 자동으로 처리해주지 못한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"이를 해결하려면 약한 참조와 미소유참조 통해 해결할 수 있다.","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"unowned는 언제 써야해?","anchor":"unowned%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%8D%A8%EC%95%BC%ED%95%B4","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"weak는 참조가 해제될 때 nil을 넣어주고 unowned는 nil을 할당하지 못하고 해제된 메모리 주소값을 계속 들고 있는다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"성능이 중요하거나 "},{"type":"codeVoice","code":"Dangling pointer가 있는 위험을 감수"},{"text":"하겠다고 하면 unowned를 사용한다.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"weak와 달리 unowned는 다른 인스턴스보다 ","type":"text"},{"code":"긴 생명주기를 가진 인스턴스를 참조","type":"codeVoice"},{"text":"할 때 주로 사용한다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"절대 먼저 메모리에서 해제될 일 없다는 걸 보장할 수 있고 시간\/공간\/계산의 복잡성을 제거할 수 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"객체의 라이프 사이클이 명확하고 개발자에 의해 제어 가능이 명확한 경우 weak Optional 타입 대신 사용하여 좀 더 간결한 코딩이 가능하다.","type":"text"}]}]}]},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"text":"Dangling pointer란?","type":"text"},{"type":"text","text":" "},{"type":"text","text":"원래 바라보던 인스턴스가 해제되면서 할당되지 않는 공간을 바라보는 포인터"}],"type":"paragraph"}]},{"type":"thematicBreak"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"OSLog는 ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/leeari95\/TIL\/blob\/main\/2021-11\/211121%20OSLog.md"},{"type":"text","text":"를 해보았는데 나머지 두 부분은 한번 알아봐야겠다."}],"type":"paragraph"}]}]},{"level":3,"type":"heading","text":"debugPrint()","anchor":"debugPrint"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"print()의 경우 인스턴스를 출력할 때 핵심 내용만을 출력해주지만 debugPrint()의 경우 해당 인스턴스의 상세 내역까지 함께 출력해준다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"디버깅 진행 시 쓸데없는 내용까지 친절하게 다 출력해주므로 약간의 속도 저하나 찍혀있는 로그 내용을 읽는데 불편을 주는 경우도 있다.","type":"text"}]}]}]},{"anchor":"assert","level":3,"type":"heading","text":"assert"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"특정 조건을 체크","type":"codeVoice"},{"text":"하고 조건이 성립되지 않으면 ","type":"text"},{"code":"메세지를 출력","type":"codeVoice"},{"type":"text","text":"하게 할 수 있다. 실제 배포된 앱 성능에는 영향을 끼치지 않는다는 특징이 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"주로 디버깅 중 조건의 검증을 위하여 사용한다.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"API 테스트 등, 조건 체크 및 테스트를 해야할 때 유용하게 사용할 수 있다."}],"type":"paragraph"}]}]},{"type":"thematicBreak"},{"text":"override init 과 required init의 차이","level":3,"type":"heading","anchor":"override-init-%EA%B3%BC-required-init%EC%9D%98-%EC%B0%A8%EC%9D%B4"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"override init","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"상속한 부모의 이니셜라이저를 재정의한 것","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"required init","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"상속받았을 때 필수로 정의해야하는 이니셜라이저","type":"text"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"},{"type":"thematicBreak"},{"type":"heading","anchor":"scrollRectToVisible","text":"scrollRectToVisible","level":3},{"syntax":"swift","type":"codeListing","code":["DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + 0.1 ) {","    self.calculationHistoryScrollView","        .scrollRectToVisible(CGRect(x: 0,","                                    y: self.calculationHistoryScrollView.contentSize.height","                                        - self.calculationHistoryScrollView.bounds.height,","                                    width: self.calculationHistoryScrollView.bounds.size.width,","                                    height: self.calculationHistoryScrollView.bounds.size.height),","                             animated: true)","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"니코는 나와 아예 다른 방법으로 Scroll View의 자동스크롤을 구현을 했었다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"설명하자면 "},{"code":"DispatchQueue.main.asyncAfter","type":"codeVoice"},{"type":"text","text":" 메소드를 활용하여 "},{"type":"codeVoice","code":"0.1초 딜레이"},{"type":"text","text":"를 준 후 레이아웃을 계산하여 스크롤을 하는 방식이다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스택뷰가 추가되고 난 후 0.1초 뒤 해당 메소드가 실행되어 스크롤 뷰의 레이아웃을 계산한다고 보면 된다."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"scrollRectToVisible()"},{"type":"text","text":" 메소드는 콘텐츠의 특정 영역을 스크롤 하는 메소드다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"setContentOffset()"},{"type":"text","text":" 메소드와 다른 점은 "},{"inlineContent":[{"type":"text","text":"CGPoint"}],"type":"strong"},{"type":"text","text":"가 아니라 "},{"type":"strong","inlineContent":[{"text":"CGRect","type":"text"}]},{"text":"을 이용하여 스크롤을 한다는 차이점이 있는 것 같다.","type":"text"}]}]}]},{"anchor":"CGPoint%EC%99%80-CGRect%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AD%98%EA%B9%8C","type":"heading","text":"CGPoint와 CGRect의 차이점은 뭘까?","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"스크롤을 할때 사용하는 두 메소드의 파라미터 타입이 달라서 궁금해졌다."}]}]}]},{"code":["func scrollRectToVisible(_ rect: CGRect, ","                animated: Bool)"],"syntax":"swift","type":"codeListing"},{"type":"codeListing","syntax":"swift","code":["func setContentOffset(_ contentOffset: CGPoint, ","             animated: Bool)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"CGPoint","type":"text"}]}]},{"items":[{"content":[{"inlineContent":[{"text":"2차원 좌표계의 점을 포함하는 타입","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"x좌표와 y좌표를 가지는 타입이라고 보면 될 것 같다.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CGSize"}]}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"너비와 높이 값을 포함하는 타입"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이것도 Point와 마찬가지로 너비와 높이의 값을 가지는 타입으로 보면 될 것 같다."}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"CGRect","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"사각형의 위치와 크기를 포함하는 타입"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Rectangle의 약자인 듯"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"너비와 높이를 가지고 있을 뿐만 아니라 원점도 가지고 있다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"정의 부분을 살펴보면 origin은 CGPoint, size는 CGSize로 정의되어있다."}]}]}],"type":"unorderedList"}]}]},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"현실에서는 너비와 높이만 있어도 사각형을 그릴 순 있지만 iOS에서는 ","type":"text"},{"type":"codeVoice","code":"위치"},{"text":"를 알아야 그릴 수 있다.","type":"text"}]}]},{"inlineContent":[{"type":"text","text":" "}],"type":"paragraph"},{"type":"thematicBreak"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"참고링크"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"https:\/\/leeari95.tistory.com\/15","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/developer.apple.com\/documentation\/swift\/1539920-debugprint"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"https:\/\/developer.apple.com\/documentation\/swift\/1541112-assert"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"https:\/\/developer.apple.com\/documentation\/uikit\/uiscrollview\/1619439-scrollrecttovisible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/developer.apple.com\/documentation\/uikit\/uiscrollview\/1619400-setcontentoffset"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"https:\/\/zeddios.tistory.com\/201"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"https:\/\/developer.apple.com\/documentation\/swift\/1541112-assert"}]}]}]}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/arinote\/211122_arc,_oslog,_debugprint,_assert,_initializer,_scrollrecttovisible,_cgrect"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AriNote\/documentation\/AriNote\/211122_ARC,_OSLog,_debugPrint,_assert,_initializer,_scrollRectToVisible,_CGRect","interfaceLanguage":"swift"},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/AriNote\/documentation\/AriNote","doc:\/\/AriNote\/documentation\/AriNote\/UIKit"]]},"references":{"doc://AriNote/documentation/AriNote/UIKit":{"kind":"article","title":"UIKit","abstract":[{"type":"text","text":"한몸이 되보자…"}],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/AriNote\/documentation\/AriNote\/UIKit","url":"\/documentation\/arinote\/uikit"},"doc://AriNote/documentation/AriNote":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AriNote\/documentation\/AriNote","abstract":[{"type":"codeVoice","code":"Today I Learned"}],"url":"\/documentation\/arinote","title":"Ari's Notes","role":"collection"},"https://github.com/leeari95/TIL/blob/main/2021-11/211121%20OSLog.md":{"titleInlineContent":[{"text":"일요일날 공부","type":"text"}],"identifier":"https:\/\/github.com\/leeari95\/TIL\/blob\/main\/2021-11\/211121%20OSLog.md","title":"일요일날 공부","url":"https:\/\/github.com\/leeari95\/TIL\/blob\/main\/2021-11\/211121%20OSLog.md","type":"link"}}}