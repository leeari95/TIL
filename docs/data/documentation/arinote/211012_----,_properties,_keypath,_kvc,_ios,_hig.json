{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/arinote\/211012_----,_properties,_keypath,_kvc,_ios,_hig"]}],"metadata":{"role":"article","modules":[{"name":"Ari's Notes"}],"roleHeading":"Article","title":"211012 프로젝트, Properties, KeyPath, KVC, iOS, HIG"},"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"anchor":"TIL-Today-I-Learned","text":"TIL (Today I Learned)","type":"heading","level":1},{"type":"paragraph","inlineContent":[{"type":"text","text":"10월 12일 (화)"}]},{"text":"학습 내용","level":2,"anchor":"%ED%95%99%EC%8A%B5-%EB%82%B4%EC%9A%A9","type":"heading"},{"inlineContent":[{"type":"text","text":"새벽에 프로젝트 STEP 1을 피드백 받기전에 좀 더 생각해볼 점은 없는지 완성한 코드를 보면서 고민하는 시간을 가졌다. 그리고 아침에 "},{"type":"codeVoice","code":"알라딘"},{"text":"과 만나서 고민했던 점을 나누고 코드를 개선한 후 PR을 올렸다. 이후에는 개인 공부시간을 가지기로 하고 프로퍼티와 KVC에 대해서 공부해보았다. 다 마치고 나서 목요일 활동학습인 iOS-HIG 부분을 예습해보았는데, 생각지도 못한 엄청난 양이다… 복습을 여러번 해야할 것 같다.","type":"text"}],"type":"paragraph"},{"anchor":"%EB%AC%B8%EC%A0%9C%EC%A0%90--%EA%B3%A0%EB%AF%BC%ED%95%9C-%EC%A0%90","text":"문제점 \/ 고민한 점","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"가위(1), 바위(2), 보(3)를 좀더 명확하게 표시할 수 없을까?","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"연산 프로퍼티를 이용하여 randomNumber를 만들어보면 어떨까?","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"승패판정을 하는 메소드명을 명확하게 다시 지어주고 싶다."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프로퍼티의 종류와 내용을 까먹었다. 복습을 해야겠다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"공부하다가 ","type":"text"},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" 라는 키워드를 얻었다. 이게 뭐지?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"프로젝트 코드를 보면서 개선할 수 있는 부분은 없는지 살펴보았다."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":" ","type":"text"}],"type":"paragraph"},{"level":2,"text":"해결방법","type":"heading","anchor":"%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"각 숫자를 의미를 담아 프로퍼티로 선언해주었더니 코드 내부의 가독성이 상승했다!","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"일단 연산 프로퍼티를 적용해보았는데, 좋아진건지 모르겠다. 로직은 그대로라… 리뷰어인 "},{"code":"Soll","type":"codeVoice"},{"text":"에게 물어보기로 하였다.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Naming 파트를 다시한번 참고해보았는데.. 영어가 안된다… 영어공부를 해야할까…? 휴…","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Properties 파트와 KeyPath는 무엇인지 간단하게 정리해보았다.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"역시 코드는 맨날 봐도 새롭게 다가온다. 좋은 방법이 떠올랐다!","type":"text"},{"text":" ","type":"text"},{"text":" ","type":"text"}]}]}]},{"anchor":"%EA%B3%B5%EB%B6%80%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC","type":"heading","level":2,"text":"공부내용 정리"},{"anchor":"Properties","type":"heading","text":"Properties","level":1},{"inlineContent":[{"type":"text","text":"프로퍼티 클래스, 구조체 또는 열거형 등에 관련된 값을 뜻한다."},{"type":"text","text":" "},{"text":"메서드  특정 타입에 관련된 함수를 뜻한다.","type":"text"}],"type":"paragraph"},{"text":"저장 프로퍼티 (Stored Properties)","anchor":"%EC%A0%80%EC%9E%A5-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Stored-Properties","type":"heading","level":1},{"inlineContent":[{"type":"text","text":"클래스, 구조체의 인스턴스와 연관된 값을 저장하는 가장 단순한 개념의 프로퍼티"}],"type":"paragraph"},{"anchor":"%EC%A7%80%EC%97%B0-%EC%A0%80%EC%9E%A5-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Lazy-Stored-Properties","type":"heading","text":"지연 저장 프로퍼티 (Lazy Stored Properties)","level":2},{"type":"paragraph","inlineContent":[{"text":"인스턴스를 생성할 때 프로퍼티에 값이 필요 없다면 프로퍼티를 옵셔널로 선언해줄 수 있다. 그러나 그것과는 조금 다른 용도로 필요할 때 값이 할당되는 지연 저장 프로퍼티가 있다. 지연 저장 프로퍼티는 호출이 있어야 값을 초기화하며, 이때 ","type":"text"},{"code":"lazy","type":"codeVoice"},{"text":" 키워드를 사용한다.","type":"text"},{"type":"text","text":" "},{"text":"상수는 인스턴스가 완전히 생성되기 전에 초기화해야 하므로 필요할 때 값을 할당하는 지연 저장 프로퍼티와는 맞지 않다. 따라서 지연 저장 프로퍼티는 ","type":"text"},{"type":"codeVoice","code":"var"},{"text":" 키워드를 사용하여 변수로 정의한다.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"주로 ‘굳이 모든 저장 프로퍼티를 사용할 필요가 없다면?’ 혹은 ‘인스턴스를 초기화하면서 저장 프로퍼티로 쓰이는 인스턴스들이 한 번에 생성되어야 한다면?’ 이 질문의 답이 지연 저장 프로퍼티 사용이라고 볼 수 있다."},{"type":"text","text":" "},{"text":"지연 저장 프로퍼티를 잘 사용하면 불필요한 성능저하나 공간 낭비를 줄일 수 있다.","type":"text"}]},{"level":2,"text":"연산 프로퍼티 (Computed Properties)","anchor":"%EC%97%B0%EC%82%B0-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-Computed-Properties","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"저장 프로퍼티와 다르게 특정 상태에 따른 값을 연산하는 프로퍼티이다. 인스턴스 내.외부의 값을 연산하여 적절한 값을 돌려주는 접근자의 역할이나 은닉화된 내부의 프로퍼티 값을 간접적으로 설정하는 설정자의 역할을 할 수도 있다."},{"text":" ","type":"text"},{"type":"text","text":"연산 프로퍼티는 접근자인 "},{"type":"codeVoice","code":"get"},{"text":" 메서드만 구현해둔 것처럼 ","type":"text"},{"type":"codeVoice","code":"읽기 전용 상태"},{"text":"로 구현하기는 쉽지만, ","type":"text"},{"code":"쓰기 전용 상태로 구현할 수 없다는 단점","type":"codeVoice"},{"type":"text","text":"이 있다."}]},{"level":2,"type":"heading","anchor":"%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EA%B0%90%EC%8B%9C%EC%9E%90-Property-Observers","text":"프로퍼티 감시자 (Property Observers)"},{"inlineContent":[{"type":"text","text":"프로퍼티의 값이 변경됨에 따라 적절한 작업을 취할 수 있다. 프로퍼티 감시자는 "},{"type":"codeVoice","code":"프로퍼티의 값이 새로 할당될 때마다 호출"},{"text":"한다. 이때 변경되는 값이 현재의 값과 같더라도 호출한다. 지연 저장 프로퍼티에는 사용할 수 없다. 일반 저장 프로퍼티에만 사용할 수 있다. 또한 프로퍼티 재정의해 상속받은 저장 프로퍼티 또는 연산 프로퍼티에도 적용할 수 있다.","type":"text"},{"type":"text","text":" "},{"text":"프로퍼티 감시자에는 프로퍼티의 값이 변경되기 직전에 호출하는 ","type":"text"},{"type":"codeVoice","code":"willSet"},{"text":" 메서드와 프로퍼티의 값이 변경된 직후에는 호출하는 ","type":"text"},{"type":"codeVoice","code":"didSet"},{"text":" 메서드가 있다. willSet은 변경될 값이고, didSet은 ","type":"text"},{"code":"변경되기 전의 값","type":"codeVoice"},{"text":"이다. 매개변수의 이름을 따로 지정하지 않으면 ","type":"text"},{"type":"codeVoice","code":"willSet은 newValue"},{"type":"text","text":"가, "},{"type":"codeVoice","code":"didSet은 oldValue"},{"type":"text","text":"라는 매개변수 이름이 "},{"type":"strong","inlineContent":[{"text":"자동 지정","type":"text"}]},{"type":"text","text":"된다."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"만약 프로퍼티 감시자가 있는 프로퍼티를 함수의 입출력 매개변수의 전달인자로 전달한다면 항상 ","type":"text"},{"type":"codeVoice","code":"willSet과 didSet 감시자"},{"text":"를 호출한다. 함수 내부에서 값이 변경되든 되지 않든 간에 함수가 종료되는 시점에 값을 다시 쓰기 때문이다.","type":"text"}]}]}],"type":"unorderedList"},{"level":1,"text":"Keypath","type":"heading","anchor":"Keypath"},{"type":"paragraph","inlineContent":[{"type":"text","text":"프로퍼티의 위치만 "},{"type":"codeVoice","code":"참조"},{"type":"text","text":"하도록 할 수 있는 방법이다. C로 치면 "},{"type":"codeVoice","code":"포인터"},{"text":"라고 보면 될 것 같다.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"\\타입이름.경로.경로.경로"}]},{"type":"heading","anchor":"%ED%82%A4-%ED%8C%A8%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0","level":2,"text":"키 패스를 사용하는 이유"},{"inlineContent":[{"type":"text","text":"키패스는 "},{"type":"codeVoice","code":"Metaprogramming"},{"type":"text","text":"의 한 형태이다. 속성에 대한 위치를 "},{"type":"codeVoice","code":"참조"},{"type":"text","text":"하여 인스턴스의 속성을 동적으로 읽거나 쓴다."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Address {","    var town: String","}","","struct Person {","    var address: Address","}","","let address = Address(town: \"어딘가\")","var ari = Person(address: address)","let ariTown = ari[keyPath: \\Person.address.town] \/\/ 가져오기","print(ariTown) \/\/ 어딘가","","ari[keyPath: \\Person.address.town] = \"어디야\" \/\/ 수정하기","print(ari[keyPath: \\Person.address.town]) \/\/ 어디야"]},{"level":2,"type":"heading","text":"키패스의 종류","anchor":"%ED%82%A4%ED%8C%A8%EC%8A%A4%EC%9D%98-%EC%A2%85%EB%A5%98"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"AntyKeyPath","type":"codeVoice"},{"type":"text","text":" 타입이 지워진 KeyPath"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"PartialKeyPath","type":"codeVoice"},{"type":"text","text":" 부분적으로 타입이 지워진 KeyPath"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"KeyPath","type":"codeVoice"},{"text":" Read-only, 읽기 전용","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"WritableKeyPath"},{"text":" value type 인스턴스에 사용 가능. 변경 가능한 모든 프로퍼티에 대한 read & write access 제공 ","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"eferenceWritableKeyPath","type":"codeVoice"},{"type":"text","text":" 클래스의 인스턴스에 사용 가능. 변경 가능한 모든 프로퍼티에 대한 read & write access 제공. "}]}]}]},{"type":"heading","text":"KVC","anchor":"KVC","level":1},{"inlineContent":[{"type":"text","text":"Key-Value Coding의 약자이다. 객체의 값을 직접 가져오지않고, Key 또는 KeyPath를 이용해서 간접적으로 데이터를 가져오거나 수정하는 방법이다."}],"type":"paragraph"},{"type":"thematicBreak"},{"items":[{"content":[{"inlineContent":[{"text":"참고링크","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Properties.html"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/Cocoa\/Conceptual\/KeyValueCoding\/index.html","type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/General\/Conceptual\/DevPedia-CocoaCore\/KeyValueCoding.html","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/zeddios.tistory.com\/1218","isActive":true}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/learnappmaking.com\/swift-keypath-how-to\/"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/AriNote\/documentation\/AriNote\/211012_----,_Properties,_KeyPath,_KVC,_iOS,_HIG"},"hierarchy":{"paths":[["doc:\/\/AriNote\/documentation\/AriNote","doc:\/\/AriNote\/documentation\/AriNote\/Swift"]]},"references":{"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/KeyValueCoding/index.html":{"type":"link","url":"https:\/\/developer.apple.com\/library\/archive\/documentation\/Cocoa\/Conceptual\/KeyValueCoding\/index.html","title":"KeyValueCoding","titleInlineContent":[{"type":"text","text":"KeyValueCoding"}],"identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/Cocoa\/Conceptual\/KeyValueCoding\/index.html"},"doc://AriNote/documentation/AriNote/Swift":{"identifier":"doc:\/\/AriNote\/documentation\/AriNote\/Swift","role":"collectionGroup","abstract":[{"type":"text","text":"언어 공부"}],"kind":"article","title":"Swift","url":"\/documentation\/arinote\/swift","type":"topic"},"https://docs.swift.org/swift-book/LanguageGuide/Properties.html":{"type":"link","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Properties.html","title":"Properties","titleInlineContent":[{"text":"Properties","type":"text"}],"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Properties.html"},"https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/KeyValueCoding.html":{"type":"link","url":"https:\/\/developer.apple.com\/library\/archive\/documentation\/General\/Conceptual\/DevPedia-CocoaCore\/KeyValueCoding.html","title":"archive\/KVC","titleInlineContent":[{"text":"archive\/KVC","type":"text"}],"identifier":"https:\/\/developer.apple.com\/library\/archive\/documentation\/General\/Conceptual\/DevPedia-CocoaCore\/KeyValueCoding.html"},"doc://AriNote/documentation/AriNote":{"kind":"symbol","type":"topic","identifier":"doc:\/\/AriNote\/documentation\/AriNote","abstract":[{"type":"codeVoice","code":"Today I Learned"}],"url":"\/documentation\/arinote","title":"Ari's Notes","role":"collection"},"https://zeddios.tistory.com/1218":{"type":"link","url":"https:\/\/zeddios.tistory.com\/1218","title":"Key-Value Coding(KVC) \/ KeyPath in Swift","titleInlineContent":[{"text":"Key-Value Coding(KVC) \/ KeyPath in Swift","type":"text"}],"identifier":"https:\/\/zeddios.tistory.com\/1218"},"https://learnappmaking.com/swift-keypath-how-to/":{"type":"link","url":"https:\/\/learnappmaking.com\/swift-keypath-how-to\/","title":"KeyPath","titleInlineContent":[{"text":"KeyPath","type":"text"}],"identifier":"https:\/\/learnappmaking.com\/swift-keypath-how-to\/"}}}